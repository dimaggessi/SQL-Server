USE EMPRESA_DB;

-- CREATE PROCEDURE
CREATE PROCEDURE BuscarEnderecoPorEntidade @ENTIDADE AS VARCHAR(30)
AS
BEGIN
    IF @ENTIDADE = 'CLIENTE'
	    SELECT * FROM TB_ENDERECO WHERE ClienteId IS NOT NULL
	ELSE IF @ENTIDADE = 'FUNCIONARIO'
	    SELECT * FROM TB_ENDERECO WHERE FuncionarioId IS NOT NULL
	ELSE IF @ENTIDADE = 'FORNECEDOR'
	    SELECT * FROM TB_ENDERECO WHERE FornecedorId IS NOT NULL
	ELSE
	    SELECT 'OPÇÃO INVÁLIDA - SELECIONE: CLIENTE, FUNCIONARIO OU FORNECEDOR'
END


EXEC BuscarEnderecoPorEntidade @ENTIDADE = 'CLIENTE';

-- ALTER PROCEDURE
ALTER PROCEDURE BuscarEnderecoPorEntidade @ENTIDADE AS VARCHAR(30)
AS
BEGIN
    IF @ENTIDADE = 'CLIENTE'
	    SELECT Logradouro, Cidade, CEP, Pais FROM TB_ENDERECO WHERE ClienteId IS NOT NULL
	ELSE IF @ENTIDADE = 'FUNCIONARIO'
	    SELECT Logradouro, Cidade, CEP, Pais FROM TB_ENDERECO WHERE FuncionarioId IS NOT NULL
	ELSE IF @ENTIDADE = 'FORNECEDOR'
	    SELECT Logradouro, Cidade, CEP, Pais FROM TB_ENDERECO WHERE FornecedorId IS NOT NULL
	ELSE
	    SELECT 'OPÇÃO INVÁLIDA - SELECIONE: CLIENTE, FUNCIONARIO OU FORNECEDOR'
END

EXEC BuscarEnderecoPorEntidade @ENTIDADE = 'FUNCIONARIO';
EXEC BuscarEnderecoPorEntidade @ENTIDADE = 'FORNECEDOR';
EXEC BuscarEnderecoPorEntidade @ENTIDADE = 'PROFESSOR'; -- teste de opção inválida


-- OUTPUT PARAMETER:
-- parâmetros que vão ser populados fora da procedure

CREATE PROCEDURE CalcularIdade @IDADE AS INT OUTPUT, @DATA_NASCIMENTO AS DATETIME2
AS
BEGIN
    SET @IDADE = DATEDIFF(YEAR, @DATA_NASCIMENTO, GETDATE()); -- DATEDIFF(retorno, data menor, data atual)
END

-- DECLARANDO A VARIÁVEL

DECLARE @IDADE_OUT AS INT = 0;

PRINT 'IDADE ANTES: ' + CAST(@IDADE_OUT AS VARCHAR(2));

EXEC CalcularIdade @IDADE_OUT OUTPUT, @DATA_NASCIMENTO = '1988-06-06';

PRINT 'IDADE DEPOIS: ' + CAST(@IDADE_OUT AS VARCHAR(2));